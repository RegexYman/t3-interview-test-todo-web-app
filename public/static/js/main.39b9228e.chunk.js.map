{"version":3,"sources":["axios/axios.js","Components/Todo/NewTodoInput/NewTodoInput.js","Components/Todo/Todo.js","Components/Todo/TodoList/TodoListItem/TodoListItem.js","Components/Todo/TodoList/TodoListInput/TodoListInput.js","Components/Todo/TodoList/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","getTodos","a","get","todos","data","getTodoList","id","password","params","todoList","updateItemDone","todo_id","item_id","post","doneReuslt","addTodo","title","addResult","addTodoListItem","item_name","due_date","description","deleteItem","deleteResult","NewTodoInput","props","useState","setTitle","setPassword","onAddTodo","tempPassword","reloadTodo","response","alert","msg","Card","body","Form","Group","Label","Control","type","value","onChange","event","target","placeholder","Button","variant","onClick","Todo","setTodos","useEffect","success","todo_lists","reloadTodoHandler","ListGroup","length","map","item","Item","action","onTodoClicked","is_protected","TodoListItem","done","Check","checked","onDoneClicked","onDeleteClicked","TodoListInput","itemName","setItemName","dueDate","setDueDate","onAddItem","protected","prompt","onNewItemAdd","min","max","TodoList","list","tempItems","items","sort","b","Date","onDoneClickedHandler","reloadTodoList","onNewItemAddHandler","onDeleteItemClickHandler","onBackClicked","Table","hover","size","App","isInTodo","setIsInTodo","setTodoList","onTodoClickedHander","console","log","todo_list","reloadTodoListHandler","privious","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b9228e.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:3001/'\n})\n\nconst getTodos = async () => {\n    let todos = await instance.get('/getTodos')\n    return todos.data\n}\n\nconst getTodoList = async (id, password) => {\n    let todoList = await instance.get(`/getTodoList/${id}`, {\n        params: {\n            password\n        }\n    })\n    return todoList.data\n}\n\nconst updateItemDone = async (todo_id, item_id, password) => {\n    let doneReuslt = await instance.post(`/done/${todo_id}`, {\n        id: item_id,\n        password\n    })\n    return doneReuslt.data\n}\n\nconst addTodo = async (title, password) => {\n    let addResult = await instance.post('/addTodos', {\n        title,\n        password\n    })\n    return addResult.data\n}\n\nconst addTodoListItem = async (todo_id, item_name, due_date, password) => {\n    let addResult = await instance.post(`/addListItem/${todo_id}`, {\n        description: item_name,\n        due_date,\n        password\n    })\n    return addResult.data\n}\n\nconst deleteItem = async (todo_id, item_id, password) => {\n    let deleteResult = await instance.post(`/removeListItem/${todo_id}`, {\n        id: item_id,\n        password\n    })\n    return deleteResult.data\n}\n\nexport default {\n    getTodos,\n    getTodoList,\n    updateItemDone,\n    addTodo,\n    addTodoListItem,\n    deleteItem\n}\n","import { useState } from 'react'\nimport { ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport axios from '../../../axios/axios'\n\nconst NewTodoInput = (props) => {\n    const [title, setTitle] = useState('')\n    const [password, setPassword] = useState('')\n\n    const onTitleChangeHandler = (event) => {\n        setTitle(event.target.value)\n    }\n\n    const onPasswordChangeHandler = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const onAddTodo = async () => {\n        try {\n            let tempPassword = null\n            if (password != '') {\n                tempPassword = password\n            }\n            await axios.addTodo(title, tempPassword)\n            await props.reloadTodo()\n            setTitle('')\n            setPassword('')\n        } catch (e) {\n            if (typeof e.response.data !== \"undefined\") {\n                alert(e.response.data.msg)\n            }\n        }\n    }\n\n    return (\n        <Card body>\n            <h5>New Todo</h5>\n            <Form>\n                <Form.Group>\n                    <Form.Label>Todo Title</Form.Label>\n                    <Form.Control type=\"text\" value={title} onChange={onTitleChangeHandler} placeholder=\"Enter todo title\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control type=\"password\" value={password} onChange={onPasswordChangeHandler} placeholder=\"Password\" />\n                </Form.Group>\n            </Form>\n            <br />\n            <Button variant=\"primary\" onClick={onAddTodo}>+ Add</Button>\n        </Card>\n    )\n}\n\nexport default NewTodoInput","import { useState, useEffect } from 'react'\nimport { ListGroup, Button, Card } from 'react-bootstrap'\nimport axios from '../../axios/axios'\nimport NewTodoInput from './NewTodoInput/NewTodoInput'\n\nconst Todo = (props) => {\n    const [todos, setTodos] = useState([])\n\n    useEffect(async () => {\n        let todos = await axios.getTodos()\n        if (todos.success) {\n            setTodos(todos.todo_lists)\n        }\n    }, [])\n\n    const reloadTodoHandler = async () => {\n        let todos = await axios.getTodos()\n        if (todos.success) {\n            setTodos(todos.todo_lists)\n        }\n    }\n\n    return (\n        <div>\n            <h2>Todo</h2>\n            <ListGroup>\n                {\n                    todos.length > 0 ?\n                        todos.map((item) => {\n                            return <ListGroup.Item action key={item.id} onClick={() => props.onTodoClicked(item.id, item.is_protected)}>{item.title}</ListGroup.Item>\n                        })\n                        :\n                        <h5><center>Empty</center></h5>\n                }\n            </ListGroup>\n            <br />\n            <NewTodoInput\n                reloadTodo={reloadTodoHandler}\n            />\n            <br />\n\n        </div>\n    )\n}\n\nexport default Todo","import { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\n\nconst TodoListItem = (props) => {\n    let {\n        id,\n        description,\n        due_date,\n        done\n    } = props.item\n\n    return (\n        <tr>\n            <td><Form.Check type=\"checkbox\" checked={done} onClick={() => props.onDoneClicked(id)} /></td>\n            <td>{done ? <s>{description}</s> : description}</td>\n            <td>Due date: {done ? <s>{due_date}</s> : due_date}</td>\n            <td><Button variant=\"danger\" onClick={() => props.onDeleteClicked(id)}>Delete</Button></td>\n        </tr>\n    )\n}\n\nexport default TodoListItem","import { useState } from 'react'\nimport { ListGroup, Button, Card, Form } from 'react-bootstrap'\nimport axios from '../../../../axios/axios'\n\nconst TodoListInput = (props) => {\n    const [itemName, setItemName] = useState('')\n    const [dueDate, setDueDate] = useState('')\n\n    const onItemNameChangeHandler = (event) => {\n        setItemName(event.target.value)\n    }\n\n    const onDueDateChangeHandler = (event) => {\n        setDueDate(event.target.value)\n    }\n\n    const onAddItem = async () => {\n        let password = null\n        if(props.protected){\n            password = prompt('Please enter todo password.')\n        }\n        await props.onNewItemAdd(itemName,dueDate,password)\n        setItemName('')\n        setDueDate('')\n    }\n\n    return (\n        <Card body>\n            <h5>New Todo Item</h5>\n            <Form>\n                <Form.Group>\n                    <Form.Label>Item name</Form.Label>\n                    <Form.Control type=\"text\" value={itemName} onChange={onItemNameChangeHandler} placeholder=\"Enter item name\" />\n                </Form.Group>\n                <Form.Group>\n                    <Form.Label>Due date</Form.Label>\n                    <Form.Control type='date' value={dueDate} onChange={onDueDateChangeHandler} min=\"2019-01-01\" max=\"2049-12-31\"  />\n                </Form.Group>\n            </Form>\n            <br />\n            <Button variant=\"success\" onClick={onAddItem}>+ Add</Button>\n        </Card>\n    )\n}\n\nexport default TodoListInput","import { useState } from 'react'\nimport { Table, Button, Form } from 'react-bootstrap'\nimport TodoListItem from './TodoListItem/TodoListItem'\nimport TodoListInput from './TodoListInput/TodoListInput'\nimport axios from '../../../axios/axios'\n\nconst TodoList = (props) => {\n    let {\n        id,\n        title,\n        items\n    } = props.list\n\n    let tempItems = items.sort((a, b) => {\n        return new Date(a.due_date) - new Date(b.due_date)\n    })\n\n    const onDoneClickedHandler = async (item_id) => {\n        try {\n            if (props.protected) {\n                let password = prompt(\"Todo is protected. Please enter password.\")\n                await axios.updateItemDone(id, item_id, password)\n                await props.reloadTodoList(id, password)\n            } else {\n                await axios.updateItemDone(id, item_id, null)\n                await props.reloadTodoList(id, null)\n            }\n        } catch (e) {\n            if (typeof e.response.data !== \"undefined\") {\n                alert(e.response.data.msg)\n            }\n        }\n    }\n\n    const onNewItemAddHandler = async (item_name, due_date, password) => {\n        try {\n            await axios.addTodoListItem(id, item_name, due_date, password)\n            await props.reloadTodoList(id, password)\n        } catch (e) {\n            if (typeof e.response.data !== \"undefined\") {\n                alert(e.response.data.msg)\n            }\n        }\n    }\n\n    const onDeleteItemClickHandler = async (item_id) => {\n        try {\n            if (props.protected) {\n                let password = prompt(\"Todo is protected. Please enter password.\")\n                await axios.deleteItem(id, item_id, password)\n                await props.reloadTodoList(id, password)\n            }else{\n                await axios.deleteItem(id, item_id, null)\n                await props.reloadTodoList(id, null)\n            }\n        } catch (e) {\n            if (typeof e.response.data !== \"undefined\") {\n                alert(e.response.data.msg)\n            }\n        }\n    }\n\n    return (\n        <div>\n            <h2>\n                <Button variant=\"primary\" onClick={props.onBackClicked}>Back</Button>&nbsp;{title}\n            </h2>\n            <br />\n            {\n                tempItems.length > 0 ?\n                    <Table hover size=\"md\">\n                        <tbody>\n                            {\n                                tempItems.map((item) => {\n                                    return <TodoListItem\n                                        key={item.id}\n                                        item={item}\n                                        onDoneClicked={onDoneClickedHandler}\n                                        onDeleteClicked={onDeleteItemClickHandler}\n                                    />\n                                })\n                            }\n                        </tbody>\n                    </Table>\n                    :\n                    <h5>\n                        <center>Todo list is empty</center>\n                    </h5>\n            }\n            <br />\n            <TodoListInput\n                protected={props.protected}\n                onNewItemAdd={onNewItemAddHandler}\n            />\n        </div>\n    )\n}\n\nexport default TodoList","import { useState, useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport Todo from './Components/Todo/Todo'\nimport TodoList from './Components/Todo/TodoList/TodoList'\nimport axios from './axios/axios'\n\nfunction App() {\n\n  const [isInTodo, setIsInTodo] = useState(false)\n  const [todoList, setTodoList] = useState(null)\n\n  const onTodoClickedHander = async (id, is_protected) => {\n    try {\n      console.log(id, is_protected)\n      let todoList\n      if (is_protected) {\n        let password = prompt(\"Todo is protected. Please enter password.\")\n        todoList = await axios.getTodoList(id, password)\n        if (todoList.success) {\n          setTodoList({ todo_list: todoList.todo_list, is_protected })\n          setIsInTodo(true)\n        } else {\n          alert(todoList.msg)\n        }\n      } else {\n        todoList = await axios.getTodoList(id, null)\n        if (todoList.success) {\n          setTodoList({ todo_list: todoList.todo_list, is_protected })\n          setIsInTodo(true)\n        } else {\n          alert(todoList.msg)\n        }\n      }\n    } catch (e) {\n      if (typeof e.response.data !== \"undefined\") {\n        alert(e.response.data.msg)\n      }\n    }\n  }\n\n  const onBackClickedHandler = () => {\n    setIsInTodo((privious) => {\n      return !privious\n    })\n  }\n\n  const reloadTodoListHandler = async (todo_id, password) => {\n    let todoList = await axios.getTodoList(todo_id, password)\n    setTodoList((privious) => {\n      return { todo_list: todoList.todo_list, is_protected: privious.is_protected }\n    })\n  }\n\n  return (\n    <Container>\n      {\n        isInTodo ?\n          <TodoList\n            list={todoList.todo_list}\n            protected={todoList.is_protected}\n            onBackClicked={onBackClickedHandler}\n            reloadTodoList={reloadTodoListHandler}\n          />\n          :\n          <Todo\n            onTodoClicked={onTodoClickedHander}\n          />\n      }\n    </Container>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}